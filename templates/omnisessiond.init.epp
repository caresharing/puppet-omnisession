#!/bin/sh
### BEGIN INIT INFO
# Provides:
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

. <%= $omnisession::init_functions %>

config_file=<%= $omnisession::config_file %>
gem_bin=<%= $omnisession::gem_bin %>

if [ -f $config_file ]
then
    cmd="$gem_bin -- -C $config_file"
else
    cmd="$gem_bin"
fi

name=`basename $0`
user=<%= $omnisession::runuser %>
pid_file=<%= $omnisession::pid_file %>
stdout_log=<%= $omnisession::log_file %>
stderr_log=<%= $omnisession::err_file %>

get_pid() {
    cat "$pid_file"
}

is_running() {
    [ -f "$pid_file" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name..."
        if [ -z "$user" ]; then
	    start-stop-daemon --start --quiet --exec $cmd start
        else
	    start-stop-daemon --start --quiet -u $user --exec $cmd start
        fi
        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        else
	    log_success_msg "OK"
	fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        kill `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            log_success_msg "OK"
            if [ -f "$pid_file" ]; then
                rm "$pid_file"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
